aes(x = percentile_2.5, y = 0, xend = percentile_97.5, yend = 0),
linewidth = 2, color = "pink"
) +
# Add a point representing the mean value
geom_point(
data = df_task1_vcoef_density_stats,
aes(x = mean, y = 0), size = 1, color = "black"
) +
# Create a grid of sub-plots based on the 'pipeline' variable
facet_grid(rows = vars(pipeline), scales = "free", switch = "y") +
# Add a vertical line at x = 0
geom_vline(xintercept = 0, color = "gray") +
# Set the labels for the x and y axes
labs(y = 'Posterior probability', x = 'Coefficient of interaction effect on drift rate') +
# Apply a black-and-white theme to the plot
theme_bw() +
# Set the x-axis limits and turn off clipping
coord_cartesian(xlim = c(-1, 1), clip = "off") +
# Customize the theme elements
theme(
axis.text = element_text(size = 8),
panel.grid = element_blank(),
text = element_text(family = 'serif'),
panel.spacing = unit(0.2, "cm"),  # Increase the spacing between facets
strip.text.y = element_blank(),
strip.placement = "outside",
strip.background = element_blank(),
plot.margin = margin(t = 20, r = 200, b = 10, l = 10)  # Add margin at the top and right
) +
# Add text annotations using the 'pipeline_labels' data frame
geom_text(
data = pipeline_labels,
aes(x = Inf, y = -Inf, label = label),
hjust = 0.5,  # Move the text to the right
vjust = -2,   # Adjust vertical alignment to avoid overlap
size = 4,
color = "black",
family = 'serif'
)
# Print the plot
print(figure_s1)
print(df_task1_vcoef_density_stats)
# It also adds some statistical elements and customizes the appearance of the plot.
figure_s1 <- ggplot(df_task1_vcoef_density_agg, aes(x = v)) +
# Add a density plot layer
geom_density() +
# Add a horizontal segment representing the 2.5th to 97.5th percentiles
geom_segment(
data = df_task1_vcoef_density_stats,
aes(x = percentile_2.5, y = 0, xend = percentile_97.5, yend = 0),
linewidth = 2, color = "pink"
) +
# Add a point representing the mean value
geom_point(
data = df_task1_vcoef_density_stats,
aes(x = mean, y = 0), size = 1, color = "black"
) +
# Create a grid of sub-plots based on the 'pipeline' variable
facet_grid(rows = vars(pipeline), scales = "free", switch = "y") +
# Add a vertical line at x = 0
geom_vline(xintercept = 0, color = "gray") +
# Set the labels for the x and y axes
labs(y = 'Posterior probability', x = 'Coefficient of interaction effect on drift rate') +
# Apply a black-and-white theme to the plot
theme_bw() +
# Set the x-axis limits and turn off clipping
coord_cartesian(xlim = c(-1, 1), clip = "off") +
# Customize the theme elements
theme(
axis.text = element_text(size = 8),
panel.grid = element_blank(),
text = element_text(family = 'serif'),
panel.spacing = unit(0.2, "cm"),  # Increase the spacing between facets
strip.text.y = element_blank(),
strip.placement = "outside",
strip.background = element_blank(),
plot.margin = margin(t = 20, r = 200, b = 10, l = 10)  # Add margin at the top and right
) +
# Add text annotations using the 'pipeline_labels' data frame
geom_text(
data = pipeline_labels,
aes(x = Inf, y = -Inf, label = label),
hjust = -0.5,  # Move the text to the right
vjust = -2,   # Adjust vertical alignment to avoid overlap
size = 4,
color = "black",
family = 'serif'
)
# Print the plot
print(figure_s1)
print(df_task1_vcoef_density_stats)
# Create a ggplot object named 'figure_s1'
# This plot visualizes the density of the variable 'v' from the data frame 'df_task1_vcoef_density_agg'.
# It also adds some statistical elements and customizes the appearance of the plot.
figure_s1 <- ggplot(df_task1_vcoef_density_agg, aes(x = v)) +
# Add a density plot layer
geom_density() +
# Add a horizontal segment representing the 2.5th to 97.5th percentiles
geom_segment(
data = df_task1_vcoef_density_stats,
aes(x = percentile_2.5, y = 0, xend = percentile_97.5, yend = 0),
linewidth = 2, color = "pink"
) +
# Add a point representing the mean value
geom_point(
data = df_task1_vcoef_density_stats,
aes(x = mean, y = 0), size = 1, color = "black"
) +
# Create a grid of sub-plots based on the 'pipeline' variable
facet_grid(rows = vars(pipeline), scales = "free", switch = "y") +
# Add a vertical line at x = 0
geom_vline(xintercept = 0, color = "gray") +
# Set the labels for the x and y axes
labs(y = 'Posterior probability', x = 'Coefficient of interaction effect on drift rate') +
# Apply a black-and-white theme to the plot
theme_bw() +
# Set the x-axis limits and turn off clipping
coord_cartesian(xlim = c(-1, 1), clip = "off") +
# Customize the theme elements
theme(
axis.text = element_text(size = 8),
panel.grid = element_blank(),
text = element_text(family = 'serif'),
panel.spacing = unit(0.2, "cm"),  # Increase the spacing between facets
strip.text.y = element_blank(),
strip.placement = "outside",
strip.background = element_blank(),
plot.margin = margin(t = 20, r = 200, b = 10, l = 10)  # Add margin at the top and right
) +
# Add text annotations using the 'pipeline_labels' data frame
geom_text(
data = pipeline_labels,
aes(x = Inf, y = -Inf, label = label),
hjust = -0.2,  # Move the text to the right
vjust = -2,   # Adjust vertical alignment to avoid overlap
size = 4,
color = "black",
family = 'serif'
)
# Print the plot
print(figure_s1)
print(df_task1_vcoef_density_stats)
figure_s1 <- ggplot(df_task1_vcoef_density_agg, aes(x = v)) +
# Add a density plot layer
geom_density() +
# Add a horizontal segment representing the 2.5th to 97.5th percentiles
geom_segment(
data = df_task1_vcoef_density_stats,
aes(x = percentile_2.5, y = 0, xend = percentile_97.5, yend = 0),
linewidth = 2, color = "pink"
) +
# Add a point representing the mean value
geom_point(
data = df_task1_vcoef_density_stats,
aes(x = mean, y = 0), size = 1, color = "black"
) +
# Create a grid of sub-plots based on the 'pipeline' variable
facet_grid(rows = vars(pipeline), scales = "free", switch = "y") +
# Add a vertical line at x = 0
geom_vline(xintercept = 0, color = "gray") +
# Set the labels for the x and y axes
labs(y = 'Posterior probability', x = 'Coefficient of interaction effect on drift rate') +
# Apply a black-and-white theme to the plot
theme_bw() +
# Set the x-axis limits and turn off clipping
coord_cartesian(xlim = c(-1, 1), clip = "off") +
# Customize the theme elements
theme(
axis.text = element_text(size = 8),
panel.grid = element_blank(),
text = element_text(family = 'serif'),
panel.spacing = unit(0.2, "cm"),  # Increase the spacing between facets
strip.text.y = element_blank(),
strip.placement = "outside",
strip.background = element_blank(),
plot.margin = margin(t = 20, r = 200, b = 10, l = 10)  # Add margin at the top and right
) +
# Add text annotations using the 'pipeline_labels' data frame
geom_text(
data = pipeline_labels,
aes(x = Inf, y = -Inf, label = label),
hjust = -0.15,  # Move the text to the right
vjust = -2,   # Adjust vertical alignment to avoid overlap
size = 4,
color = "black",
family = 'serif'
)
# Print the plot
print(figure_s1)
print(df_task1_vcoef_density_stats)
# Create a ggplot object named 'figure_s1'
# This plot visualizes the density of the variable 'v' from the data frame 'df_task1_vcoef_density_agg'.
# It also adds some statistical elements and customizes the appearance of the plot.
figure_s1 <- ggplot(df_task1_vcoef_density_agg, aes(x = v)) +
# Add a density plot layer
geom_density() +
# Add a horizontal segment representing the 2.5th to 97.5th percentiles
geom_segment(
data = df_task1_vcoef_density_stats,
aes(x = percentile_2.5, y = 0, xend = percentile_97.5, yend = 0),
linewidth = 2, color = "pink"
) +
# Add a point representing the mean value
geom_point(
data = df_task1_vcoef_density_stats,
aes(x = mean, y = 0), size = 1, color = "black"
) +
# Create a grid of sub-plots based on the 'pipeline' variable
facet_grid(rows = vars(pipeline), scales = "free", switch = "y") +
# Add a vertical line at x = 0
geom_vline(xintercept = 0, color = "gray") +
# Set the labels for the x and y axes
labs(y = 'Posterior probability', x = 'Coefficient of interaction effect on drift rate') +
# Apply a black-and-white theme to the plot
theme_bw() +
# Set the x-axis limits and turn off clipping
coord_cartesian(xlim = c(-1, 1), clip = "off") +
# Add text annotations using the 'pipeline_labels' data frame
geom_text(
data = pipeline_labels,
aes(x = Inf, y = 0, label = label),  # 定位到右侧边缘
hjust = -0.1,        # 向左微调（负值向右，正值向左）
vjust = 1.5,         # 垂直居中调整
size = 4,
color = "black",
family = 'serif',
check_overlap = TRUE # 避免标签重叠
) +
# Customize the theme elements
theme(
plot.margin = margin(t = 20, r = 120, b = 20, l = 20),  # 右侧留足空间
axis.text = element_text(size = 8),
panel.grid = element_blank(),
text = element_text(family = 'serif'),
panel.spacing = unit(0.2, "cm"),
strip.text.y = element_blank(),
strip.placement = "outside",
strip.background = element_blank()
)
# Print the plot
print(figure_s1)
print(df_task1_vcoef_density_stats)
# Create a ggplot object named 'figure_s1'
# This plot visualizes the density of the variable 'v' from the data frame 'df_task1_vcoef_density_agg'.
# It also adds some statistical elements and customizes the appearance of the plot.
figure_s1 <- ggplot(df_task1_vcoef_density_agg, aes(x = v)) +
# Add a density plot layer
geom_density() +
# Add a horizontal segment representing the 2.5th to 97.5th percentiles
geom_segment(
data = df_task1_vcoef_density_stats,
aes(x = percentile_2.5, y = 0, xend = percentile_97.5, yend = 0),
linewidth = 2, color = "pink"
) +
# Add a point representing the mean value
geom_point(
data = df_task1_vcoef_density_stats,
aes(x = mean, y = 0), size = 1, color = "black"
) +
# Create a grid of sub-plots based on the 'pipeline' variable
facet_grid(rows = vars(pipeline), scales = "free", switch = "y") +
# Add a vertical line at x = 0
geom_vline(xintercept = 0, color = "gray") +
# Set the labels for the x and y axes
labs(y = 'Posterior probability', x = 'Coefficient of interaction effect on drift rate') +
# Apply a black-and-white theme to the plot
theme_bw() +
# Set the x-axis limits and turn off clipping
coord_cartesian(xlim = c(-1, 1), clip = "off") +
# Add text annotations using the 'pipeline_labels' data frame
geom_text(
data = pipeline_labels,
aes(x = Inf, y = 0, label = label),  # 定位到右侧边缘
hjust = -0.1,        # 向左微调（负值向右，正值向左）
vjust = 1.5,         # 垂直居中调整
size = 4,
color = "black",
family = 'serif',
check_overlap = TRUE # 避免标签重叠
) +
# Customize the theme elements
theme(
plot.margin = margin(t = 20, r = 200, b = 20, l = 20),  # 右侧留足空间
axis.text = element_text(size = 8),
panel.grid = element_blank(),
text = element_text(family = 'serif'),
panel.spacing = unit(0.2, "cm"),
strip.text.y = element_blank(),
strip.placement = "outside",
strip.background = element_blank()
)
# Print the plot
print(figure_s1)
print(df_task1_vcoef_density_stats)
# Create a ggplot object named 'figure_s1'
# This plot visualizes the density of the variable 'v' from the data frame 'df_task1_vcoef_density_agg'.
# It also adds some statistical elements and customizes the appearance of the plot.
figure_s1 <- ggplot(df_task1_vcoef_density_agg, aes(x = v)) +
# Add a density plot layer
geom_density() +
# Add a horizontal segment representing the 2.5th to 97.5th percentiles
geom_segment(
data = df_task1_vcoef_density_stats,
aes(x = percentile_2.5, y = 0, xend = percentile_97.5, yend = 0),
linewidth = 2, color = "pink"
) +
# Add a point representing the mean value
geom_point(
data = df_task1_vcoef_density_stats,
aes(x = mean, y = 0), size = 1, color = "black"
) +
# Create a grid of sub-plots based on the 'pipeline' variable
facet_grid(rows = vars(pipeline), scales = "free", switch = "y") +
# Add a vertical line at x = 0
geom_vline(xintercept = 0, color = "gray") +
# Set the labels for the x and y axes
labs(y = 'Posterior probability', x = 'Coefficient of interaction effect on drift rate') +
# Apply a black-and-white theme to the plot
theme_bw() +
# Set the x-axis limits and turn off clipping
coord_cartesian(xlim = c(-1, 1), clip = "off") +
# Add text annotations using the 'pipeline_labels' data frame
geom_text(
data = pipeline_labels,
aes(x = Inf, y = 0, label = label),  # 定位到右侧边缘
hjust = 0,        # 向左微调（负值向右，正值向左）
vjust = 2,         # 垂直居中调整
size = 4,
color = "black",
family = 'serif',
check_overlap = TRUE # 避免标签重叠
) +
# Customize the theme elements
theme(
plot.margin = margin(t = 20, r = 200, b = 20, l = 20),  # 右侧留足空间
axis.text = element_text(size = 8),
panel.grid = element_blank(),
text = element_text(family = 'serif'),
panel.spacing = unit(0.2, "cm"),
strip.text.y = element_blank(),
strip.placement = "outside",
strip.background = element_blank()
)
# Print the plot
print(figure_s1)
print(df_task1_vcoef_density_stats)
# Create a ggplot object named 'figure_s1'
# This plot visualizes the density of the variable 'v' from the data frame 'df_task1_vcoef_density_agg'.
# It also adds some statistical elements and customizes the appearance of the plot.
figure_s1 <- ggplot(df_task1_vcoef_density_agg, aes(x = v)) +
# Add a density plot layer
geom_density() +
# Add a horizontal segment representing the 2.5th to 97.5th percentiles
geom_segment(
data = df_task1_vcoef_density_stats,
aes(x = percentile_2.5, y = 0, xend = percentile_97.5, yend = 0),
linewidth = 2, color = "pink"
) +
# Add a point representing the mean value
geom_point(
data = df_task1_vcoef_density_stats,
aes(x = mean, y = 0), size = 1, color = "black"
) +
# Create a grid of sub-plots based on the 'pipeline' variable
facet_grid(rows = vars(pipeline), scales = "free", switch = "y") +
# Add a vertical line at x = 0
geom_vline(xintercept = 0, color = "gray") +
# Set the labels for the x and y axes
labs(y = 'Posterior probability', x = 'Coefficient of interaction effect on drift rate') +
# Apply a black-and-white theme to the plot
theme_bw() +
# Set the x-axis limits and turn off clipping
coord_cartesian(xlim = c(-1, 1), clip = "off") +
# Add text annotations using the 'pipeline_labels' data frame
geom_text(
data = pipeline_labels,
aes(x = Inf, y = 0, label = label),  # 定位到右侧边缘
hjust = 0,        # 向左微调（负值向右，正值向左）
vjust = -2,         # 垂直居中调整
size = 4,
color = "black",
family = 'serif',
check_overlap = TRUE # 避免标签重叠
) +
# Customize the theme elements
theme(
plot.margin = margin(t = 20, r = 200, b = 20, l = 20),  # 右侧留足空间
axis.text = element_text(size = 8),
panel.grid = element_blank(),
text = element_text(family = 'serif'),
panel.spacing = unit(0.2, "cm"),
strip.text.y = element_blank(),
strip.placement = "outside",
strip.background = element_blank()
)
# Print the plot
print(figure_s1)
print(df_task1_vcoef_density_stats)
# Create a ggplot object named 'figure_s1'
# This plot visualizes the density of the variable 'v' from the data frame 'df_task1_vcoef_density_agg'.
# It also adds some statistical elements and customizes the appearance of the plot.
figure_s1 <- ggplot(df_task1_vcoef_density_agg, aes(x = v)) +
# Add a density plot layer
geom_density() +
# Add a horizontal segment representing the 2.5th to 97.5th percentiles
geom_segment(
data = df_task1_vcoef_density_stats,
aes(x = percentile_2.5, y = 0, xend = percentile_97.5, yend = 0),
linewidth = 2, color = "pink"
) +
# Add a point representing the mean value
geom_point(
data = df_task1_vcoef_density_stats,
aes(x = mean, y = 0), size = 1, color = "black"
) +
# Create a grid of sub-plots based on the 'pipeline' variable
facet_grid(rows = vars(pipeline), scales = "free", switch = "y") +
# Add a vertical line at x = 0
geom_vline(xintercept = 0, color = "gray") +
# Set the labels for the x and y axes
labs(y = 'Posterior probability', x = 'Coefficient of interaction effect on drift rate') +
# Apply a black-and-white theme to the plot
theme_bw() +
# Set the x-axis limits and turn off clipping
coord_cartesian(xlim = c(-1, 1), clip = "off") +
# Add text annotations using the 'pipeline_labels' data frame
geom_text(
data = pipeline_labels,
aes(x = Inf, y = 0, label = label),  # 定位到右侧边缘
hjust = -0.5,        # 向左微调（负值向右，正值向左）
vjust = -2,         # 垂直居中调整
size = 4,
color = "black",
family = 'serif',
check_overlap = TRUE # 避免标签重叠
) +
# Customize the theme elements
theme(
plot.margin = margin(t = 20, r = 200, b = 20, l = 20),  # 右侧留足空间
axis.text = element_text(size = 8),
panel.grid = element_blank(),
text = element_text(family = 'serif'),
panel.spacing = unit(0.2, "cm"),
strip.text.y = element_blank(),
strip.placement = "outside",
strip.background = element_blank()
)
# Print the plot
print(figure_s1)
print(df_task1_vcoef_density_stats)
# Create a ggplot object named 'figure_s1'
# This plot visualizes the density of the variable 'v' from the data frame 'df_task1_vcoef_density_agg'.
# It also adds some statistical elements and customizes the appearance of the plot.
figure_s1 <- ggplot(df_task1_vcoef_density_agg, aes(x = v)) +
# Add a density plot layer
geom_density() +
# Add a horizontal segment representing the 2.5th to 97.5th percentiles
geom_segment(
data = df_task1_vcoef_density_stats,
aes(x = percentile_2.5, y = 0, xend = percentile_97.5, yend = 0),
linewidth = 2, color = "pink"
) +
# Add a point representing the mean value
geom_point(
data = df_task1_vcoef_density_stats,
aes(x = mean, y = 0), size = 1, color = "black"
) +
# Create a grid of sub-plots based on the 'pipeline' variable
facet_grid(rows = vars(pipeline), scales = "free", switch = "y") +
# Add a vertical line at x = 0
geom_vline(xintercept = 0, color = "gray") +
# Set the labels for the x and y axes
labs(y = 'Posterior probability', x = 'Coefficient of interaction effect on drift rate') +
# Apply a black-and-white theme to the plot
theme_bw() +
# Set the x-axis limits and turn off clipping
coord_cartesian(xlim = c(-1, 1), clip = "off") +
# Add text annotations using the 'pipeline_labels' data frame
geom_text(
data = pipeline_labels,
aes(x = Inf, y = 0, label = label),  # 定位到右侧边缘
hjust = -0.05,        # 向左微调（负值向右，正值向左）
vjust = -2,         # 垂直居中调整
size = 4,
color = "black",
family = 'serif',
check_overlap = TRUE # 避免标签重叠
) +
# Customize the theme elements
theme(
plot.margin = margin(t = 20, r = 200, b = 20, l = 20),  # 右侧留足空间
axis.text = element_text(size = 8),
panel.grid = element_blank(),
text = element_text(family = 'serif'),
panel.spacing = unit(0.2, "cm"),
strip.text.y = element_blank(),
strip.placement = "outside",
strip.background = element_blank()
)
# Print the plot
print(figure_s1)
print(df_task1_vcoef_density_stats)
# Load required packages using pacman
require(pacman)
p_load("boot", "tidyverse", "reshape2", "brms", "bruceR", "BayesFactor", "nlme", "lme4", "patchwork")
set.seed(123)  # Set a random seed for reproducibility
# Read the preprocessed data from a CSV file
df <- read.csv('../Data/results/slp_v.csv')
# Extract the relevant columns (slp and v) for analysis
data <- data.frame(df[,c('slp','v')])
# Perform bootstrapping to estimate the correlation and its confidence intervals
b <- boot(data, statistic = corr.stats, R = 1000)  # Perform 1000 bootstrap resamples
